
pipeline {
    agent {
        label 'lms-slavenode'
    }
    environment {
        DOCKERHUB_CREDENTIALS = credentials('dockerhub-credentials')
        registry = "yoursureshdockerhub/lms-backend"
        registryCredential = 'dockerhub-credentials'
        dockerImage = ''
    }
    stages {
        stage('Send Slack Notification') {
            steps {
                slackSend(
                    channel: 'jenkins-lms-backend',
                    color: '#FFA500',
                    message: 'Hii.....LMS-Application Backend Pipeline Has Been Started.',
                    teamDomain: 'jenkins-notification-LMS',
                    tokenCredentialId: 'slack-credentials',
                    username: 'Suresh'
                )
            }
        }
   

        stage('installing docker') {
            steps {
                script {
                    def dockerCheck = sh(script: 'docker --version', returnStatus: true)
                    
                    if (dockerCheck == 0) {
                        echo 'Docker is already installed'
                    } else {
                        sh 'sudo curl https://raw.githubusercontent.com/digitaledify/lms-public/main/install-docker.sh | bash'
                    }
                }
            }
        }
    
    
         stage('Creating network') {
            steps {
                script {
                    def networkExists = sh(script: 'docker network ls -q -f name=lmsnetwork', returnStatus: true)
                    if (networkExists == 0) {
                        echo 'lmsnetwork already exists'
                    } else {
                        echo 'Creating lmsnetwork...'
                        sh 'docker network create lmsnetwork'
                    }
                }
            }
        }
}
}
