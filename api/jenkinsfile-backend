pipeline {
    agent {
        label 'lms-slavenode'
    }
    environment {
        DOCKERHUB_CREDENTIALS = credentials('dockerhub-credentials')
        registry = "yoursureshdockerhub/lms-backend"
        registryCredential = 'dockerhub-credentials'
        dockerImage = ''
    }
    stages {
        stage('pipeline status') {
            steps {
                script {
                    slackSend channel: 'jenkins-lms-backend',
                            color: '#1e1ec9',
                            message: 'lms-Backend Pipeline has been Started',
                            tokenCredentialId: '4ugGqA8TOvRJReyGh3w5cfuY'
                }
            }
        }

        stage('installing docker') 
            steps {
                script {
                    def dockerCheck = sh(script: 'docker --version', returnStatus: true)

                    if (dockerCheck == 0) {
                        echo 'Docker is already installed'
                    } else {
                        sh 'sudo curl https://raw.githubusercontent.com/digitaledify/lms-public/main/install-docker.sh | bash'
                    }
                }
            }
        }

        stage('Creating network') {
            steps {
                script {
                    def networkExists = sh(script: 'docker network ls -q -f name=lmsnetwork', returnStatus: true)
                    if (networkExists == 0) {
                        echo 'lmsnetwork already exists'
                    } else {
                        echo 'Creating lmsnetwork...'
                        sh 'docker network create lmsnetwork'
                    }
                }
            }
        }
    }

    post {
        failure { // This block will run always, regardless of success or failure
            script {
                slackSend channel: 'jenkins-lms-backend', color: 'danger', message: 'Ooops..Failed!! Check the back-end job configurations Thanks...Suresh - Job failed', tokenCredentialId: '4ugGqA8TOvRJReyGh3w5cfuY'

                mail bcc: '', body: '''Building lms application backend job got failed. Check job configuration.

                Thank you''', cc: '', from: '', replyTo: '', subject: 'Ooops..Failed!! Check the back-end job configurations Thanks...Suresh - Job failed', to: 'yoursureshb@gmail.com'
            }
        }
        success {
            script {
                slackSend channel: 'jenkins-lms-backend', color: 'good', message: 'Hi..CONGRATULATIONS!!! Backend job succeeded', tokenCredentialId: '4ugGqA8TOvRJReyGh3w5cfuY'

                mail bcc: '', body: '''Building lms application backend job got success. Check your browser with your IP:port number/api. It will show success.

                Thank you''', cc: '', from: '', replyTo: '', subject: 'Build Successful !! lms_backend', to: 'yoursureshb@gmail.com'
            }
        }
    }
}
